plugins {
    id 'java'
}

group = 'com.redelegends'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = 'protocollib'
        url = 'https://repo.dmulloy2.net/repository/public/'
    }
    maven {
        name = 'placeholder-api'
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
}

dependencies {
    compileOnly 'org.spigotmc:spigot:1.8.8-R0.1-SNAPSHOT'
    compileOnly 'com.comphenix.protocol:ProtocolLib:5.1.0'
    compileOnly 'me.clip:placeholderapi:2.11.5'
    compileOnly 'org.mongodb:mongodb-driver-sync:4.2.1'
    compileOnly 'org.mongodb:mongo-java-driver:3.12.10'
    compileOnly 'com.zaxxer:HikariCP:2.3.2'
    compileOnly 'org.mariadb.jdbc:mariadb-java-client:2.1.2'
    compileOnly 'com.google.guava:guava:32.0.0-android'
    compileOnly 'org.yaml:snakeyaml:2.0'
    compileOnly 'io.socket:socket.io-client:2.1.0'
    compileOnly 'org.json:json:20231013'
    compileOnly 'com.squareup.okio:okio:3.4.0'
    compileOnly 'com.squareup.okhttp3:okhttp:5.0.0-alpha.3'

    implementation files ('libs/waterfall.jar')
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

jar {
    archiveBaseName.set('LegendsCore')
    archiveVersion.set('')
}
